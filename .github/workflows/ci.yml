name: ci

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12, 14, 16]
        target: [test, test-multi, test-remote, coverage]
        postgres-version: [14]

    env:
      CI: true
      PGUSER: postgres
      NODE_CONFIG: '{"db": {"host": "localhost"}}'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update APT
        run: sudo apt update

      - name: Install OS dependencies
        run: sudo apt install socat postgresql-${{ matrix.postgres-version }} postgresql-client-${{ matrix.postgres-version }}

      - name: Check PostgreSQL version
        run: |
          sudo sed -i 's/peer/\0 map=mymap/' /etc/postgresql/${{ matrix.postgres-version }}/main/pg_hba.conf
          echo "mymap $USER postgres" | sudo tee -a /etc/postgresql/${{ matrix.postgres-version }}/main/pg_ident.conf
          sudo cat /etc/postgresql/${{ matrix.postgres-version }}/main/{pg_hba,pg_ident}.conf
          sudo systemctl enable postgresql
          sudo systemctl start postgresql
          sudo systemctl status postgresql
          client_ver="$(psql --version)"
          echo "$client_ver"
          server_ver="$(psql -c 'select version();')"
          echo "$server_ver"
          test "$(echo "$client_ver" | gawk '{printf("%d", $3)})'" = ${{ matrix.postgres-version }}
          test "$(echo "$server_ver" | gawk '{/PostgreSQL/{printf("%d", $2)}')" = ${{ matrix.postres-version }}

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup SSH
        run: |
          ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ''
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          ssh-keyscan -t rsa localhost >> ~/.ssh/known_hosts
          echo "PGHOST=$PGHOST" >> ~/.ssh/environment
          echo "PGUSER=$PGUSER" >> ~/.ssh/environment
          echo "PGPASSWORD=$PGPASSWORD" >> ~/.ssh/environment
          echo "NODE_CONFIG=$NODE_CONFIG" >> ~/.ssh/environment
          cat ~/.ssh/environment
          chmod 600 ~/.ssh/*
          chmod 700 ~/.ssh
          chmod 755 ~/
          echo PermitUserEnvironment=yes | sudo tee -a /etc/ssh/sshd_config
          sudo systemctl restart ssh.service
          ssh localhost 'echo $PGHOST'

      - name: Check version
        run: |
          test "$(node --version | cut -d . -f 1)" = "v${{ matrix.node-version }}"
          echo "PATH=\"$(dirname "$(which node)"):\$PATH\"" > ~/.bashrc.new
          cat ~/.bashrc >> ~/.bashrc.new
          mv ~/.bashrc.new ~/.bashrc
          node_ver="$(ssh localhost node --version)"
          echo "Node $node_ver"
          test "$(echo "$node_ver" | cut -d . -f 1)" = "v${{ matrix.node-version }}"

      - name: Install packages
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Create database
        run: psql -c 'create database "qlobber-pg";'

      - name: Apply migrations
        run: npm run migrate up

      - name: Run target
        run: npm run ${{ matrix.target }}

      - name: Coveralls
        if: matrix.target == 'coverage'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
